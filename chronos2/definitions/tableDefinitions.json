[
    {
        "name": "Bulk commits",
        "slug": "bulk-commits",
        "entity": {
            "name": "commit",
            "filter": "volume.*.bulk or volume.*.import"
        },
        "columns": [
            {
                "type": "date",
                "label": "Date",
                "query": "date"
            },
            {
                "type": "string",
                "label": "Message",
                "query": "message",
                "sort": "ascending"
            },
            {
                "type": "numeric",
                "label": "Files",
                "query": "count files"
            },
            {
                "type": "numeric",
                "label": "Volume of change",
                "query": "sum churn of changes"
            },
            {
                "type": "string",
                "label": "Revision",
                "query": "revision"
            },
            {
                "type": "list of strings",
                "label": "Developers",
                "query": "authors"
            }
        ],
        "pageSize": 10,
        "notes": "This table lists bulk commits, defined as commits affecting many files or involving high code churn. It includes the date, commit message, number of files changed, total volume of change, revision ID, and involved developers.\n\nIt helps answer questions like:\n- Which commits introduced unusually large changes?\n- Who tends to make high-volume commits?\n- Are bulk or import-style commits common in this repository?\n\nThis view is useful for identifying squashed commits, large-scale imports, or sweeping changes that may obscure fine-grained history or increase review risk.",
        "section": "nature-of-changes",
        "traits": [
            "aspect.cohesive-changes"
        ]
    },
    {
        "name": "Bug-fixing commits",
        "slug": "bug-fixing-commits",
        "entity": {
            "name": "commit",
            "filter": "message.nature.bugfix"
        },
        "columns": [
            {
                "type": "date",
                "label": "Date",
                "query": "date",
                "sort": "descending"
            },
            {
                "type": "string",
                "label": "Message",
                "query": "message"
            },
            {
                "type": "numeric",
                "label": "Files",
                "query": "count files"
            },
            {
                "type": "list of strings",
                "label": "File Names",
                "query": "files"
            },
            {
                "type": "numeric",
                "label": "Volume of change",
                "query": "sum churn of changes"
            },
            {
                "type": "list of strings",
                "label": "Developers",
                "query": "authors"
            },
            {
                "type": "string",
                "label": "Revision",
                "query": "revision"
            }
        ],
        "pageSize": 10,
        "notes": "This table shows commits that appear to be bug fixes, based on commit message heuristics. Each entry includes the commit date, message, files changed, volume of change, developers, and revision ID.\n\nIt helps answer questions like:\n- Which commits were identified as bug-fixes ?\n- Who is most involved in fixing bugs?\n\nThis view is useful for reviewing the accuracy of bug-fix detection heuristics, and understanding the relationship between code changes and defect resolution.",
        "section": "test-automation",
        "traits": [
            "aspect.testing-efficacy"
        ]
    },
    {
      "name": "Developers table (last year)",
      "slug": "developers-table-last-year",
      "entity": {
        "name": "author",
        "filter": "not name starts with _ and has changes during last year"
      },
      "columns": [
        {
          "type": "string",
          "label": "Name",
          "query": "name"
        },
        {
          "type": "boolean",
          "label": "Active",
          "query": "status.active"
        },
        {
          "type": "numeric",
          "label": "Commits",
          "query": "count commits"
        },
        {
          "type": "date",
          "label": "First commit",
          "query": "date of first commit",
          "sort": "descending",
          "format": {
            "conditional": [
              {
                "query": "date of first commit during last year",
                "style": "font-weight: bold"
              },
              {
                "query": "date of first commit not during last 3 years",
                "style": "font-weight: lighter;"
              }
            ]
          }
        },
        {
          "type": "date",
          "label": "Last commit",
          "query": "date of last commit"
        },
        {
          "type": "numeric",
          "label": "Changes",
          "query": "count changes"
        },
        {
          "type": "numeric",
          "label": "Volume of change",
          "query": "sum churn of changes"
        },
        {
          "type": "numeric",
          "label": "% Volume of change",
          "query": "(sum churn of changes) / (sum churn of project's changes)",
          "format": {
            "data": {
              "percent": true,
              "nrOfDecimals": 0
            },
            "conditional": [
              {
                "query": "(sum churn of changes) / (sum churn of project's changes) <  0.01",
                "style": "font-weight: lighter;"
              },
              {
                "query": "(sum churn of changes) / (sum churn of project's changes) >  0.1",
                "style": "font-weight: bold"
              }
            ]
          }
        },
        {
          "type": "numeric",
          "label": "Growth",
          "query": "sum growth of changes having growth > 0"
        },
        {
          "type": "numeric",
          "label": "Volume of change (last year)",
          "query": "sum churn of commits having (date during last year)"
        },
        {
          "type": "numeric",
          "label": "% Volume of change (last year)",
          "query": "(sum churn of commits having (date during last year)) / (sum churn of project's commits having (date during last year))",
          "format": {
            "data": {
              "percent": true,
              "nrOfDecimals": 0
            },
            "conditional": [
              {
                "query": "(sum churn of commits having (date during last year)) / (sum churn of project's commits having (date during last year)) <  0.01",
                "style": "font-weight: lighter;"
              },
              {
                "query": "(sum churn of commits having (date during last year)) / (sum churn of project's commits having (date during last year)) >  0.1",
                "style": "font-weight: bold"
              }
            ]
          }
        },
        {
          "type": "numeric",
          "label": "Volume of change (last year, organic)",
          "query": "sum churn of commits having (date during last year and not volume.*.bulk and not volume.*.import)"
        },
        {
          "type": "numeric",
          "label": "% Volume of change (last year, organic)",
          "query": "(sum churn of commits having (date during last year and not volume.*.bulk and not volume.*.import)) / (sum churn of project's commits having (date during last year and not volume.*.bulk and not volume.*.import))",
          "format": {
            "data": {
              "percent": true,
              "nrOfDecimals": 0
            },
            "conditional": [
              {
                "query": "(sum churn of commits having (date during last year and not volume.*.bulk and not volume.*.import)) / (sum churn of project's commits having (date during last year and not volume.*.bulk and not volume.*.import)) <  0.01",
                "style": "font-weight: lighter;"
              },
              {
                "query": "(sum churn of commits having (date during last year and not volume.*.bulk and not volume.*.import)) / (sum churn of project's commits having (date during last year and not volume.*.bulk and not volume.*.import)) >  0.1",
                "style": "font-weight: bold"
              }
            ]
          }
        },
        {
          "type": "numeric",
          "label": "Volume of change (last year, source-code)",
          "query": "sum churn of changes since last year for files having technology.code"
        },
        {
          "type": "numeric",
          "label": "% Volume of change (last year, source-code)",
          "query": "(sum churn of changes since last year for files having technology.code) / (sum churn of project's changes since last year for project's files having technology.code)",
          "format": {
            "data": {
              "percent": true,
              "nrOfDecimals": 0
            },
            "conditional": [
              {
                "query": "(sum churn of changes since last year for files having technology.code) / (sum churn of project's changes since last year for project's files having technology.code) <  0.01",
                "style": "font-weight: lighter;"
              },
              {
                "query": "(sum churn of changes since last year for files having technology.code) / (sum churn of project's changes since last year for project's files having technology.code) >  0.1",
                "style": "font-weight: bold"
              }
            ]
          }
        },
        {
          "type": "numeric",
          "label": "Volume of change (last year, organic, source-code)",
          "query": "sum churn of commits having (date during last year and not volume.*.bulk and not volume.*.import) for files having technology.code"
        },
        {
          "type": "numeric",
          "label": "% Volume of change (last year, organic, source-code)",
          "query": "(sum churn of commits having (date during last year and not volume.*.bulk and not volume.*.import) for files having technology.code) / (sum churn of project's commits having (date during last year and not volume.*.bulk and not volume.*.import) for project's files having technology.code)",
          "format": {
            "data": {
              "percent": true,
              "nrOfDecimals": 0
            },
            "conditional": [
              {
                "query": "(sum churn of commits having (date during last year and not volume.*.bulk and not volume.*.import) for files having technology.code) / (sum churn of project's commits having (date during last year and not volume.*.bulk and not volume.*.import) for project's files having technology.code) <  0.01",
                "style": "font-weight: lighter;"
              },
              {
                "query": "(sum churn of commits having (date during last year and not volume.*.bulk and not volume.*.import) for files having technology.code) / (sum churn of project's commits having (date during last year and not volume.*.bulk and not volume.*.import) for project's files having technology.code) >  0.1",
                "style": "font-weight: bold"
              }
            ]
          }
        },
        {
          "type": "numeric",
          "label": "Growth (last year, source-code)",
          "query": "sum growth of changes having (date since last year and growth > 0) for files having technology.code"
        },
        {
          "type": "numeric",
          "label": "% Growth (last year, source-code)",
          "query": "(sum growth of changes having (date since last year and growth > 0) for files having technology.code) / (sum growth of project's changes having (date since last year and growth > 0) for project's files having technology.code)",
          "format": {
            "data": {
              "percent": true,
              "nrOfDecimals": 0
            },
            "conditional": [
              {
                "query": "(sum growth of changes having (date since last year and growth > 0) for files having technology.code) / (sum growth of project's changes having (date since last year and growth > 0) for project's files having technology.code) <  0.01",
                "style": "font-weight: lighter;"
              },
              {
                "query": "(sum growth of changes having (date since last year and growth > 0) for files having technology.code) / (sum growth of project's changes having (date since last year and growth > 0) for project's files having technology.code) >  0.1",
                "style": "font-weight: bold"
              }
            ]
          }
        },
        {
          "type": "numeric",
          "label": "Last Year Files",
          "query": "count files for changes having date since last year"
        }
      ],
      "rows": {
        "format": {
          "conditional": [
            {
              "query": "status.active",
              "style": "color: #2ca02c;"
            },
            {
              "query": "not status.active",
              "style": "color: #1f77b4"
            }
          ]
        }
      },
      "pageSize": 10,
      "notes": "This table summarizes developer activity over the last year, including commit volume, code churn, file coverage, and growth metrics. It presents both absolute and relative (% of project) values across different scopes:\n- All changes\n- Organic changes (excluding bulk/import)\n- Source-code changes\n\nIt helps answer questions like:\n- Who are the most active developers over the last year?\n- What share of meaningful change (e.g., organic or source-code) does each developer contribute?\n- Are any developers dominating the change volume?\n- Which developers are likely recent joiners or inactive contributors?\n\nThe 'Active' flag indicates if the developer made recent changes. Use this view to assess team evolution, contribution balance, and potential knowledge silos.\n\nNot all columns are equally relevant for every analysis. Remove unused ones based on context. To include all developers (not just active), disable the 'active' filter in the entity.",
      "section": "knowledge",
      "traits": [
        "aspect.team-evolution",
        "aspect.knowledge-sharing"
      ]
    },
    {
      "name": "FilesExport",
      "slug": "filesexport",
      "entity": {
          "name": "file"
      },
      "columns": [
          {
              "type": "string",
              "label": "path",
              "query": "path",
              "sort": "ascending"
          },
          {
              "type": "list of strings",
              "label": "Component",
              "query": "label of component.*"
          },
          {
              "type": "string",
              "label": "extension",
              "query": "extension"
          },
          {
              "type": "date",
              "label": "firstCommitDate",
              "query": "date of first commit"
          },
          {
              "type": "date",
              "label": "lastCommitDate",
              "query": "date of last commit"
          },
          {
              "type": "numeric",
              "label": "numberOfCommits",
              "query": "count commits"
          },
          {
              "type": "numeric",
              "label": "numberOfLastYearCommits",
              "query": "count commits during last year"
          },
          {
              "type": "numeric",
              "label": "size",
              "query": "size"
          },
          {
              "type": "numeric",
              "label": "aggregateTypeComplexity",
              "query": "strength of metric.atc"
          },
          {
              "type": "numeric",
              "label": "sumOfCoChangeCoupling",
              "query": "strength of metric.sumOfCoupling"
          },
          {
              "type": "list of strings",
              "label": "role",
              "query": "label of role.*"
          }
      ],
      "pageSize": 10,
      "notes": "This table is used as a File export for integration with other tools, so it's too generic to be useful in most other contexts.",
      "section": "export"
  },
  {
      "name": "DevelopersExport",
      "slug": "developersexport",
      "entity": {
          "name": "author",
          "filter": "not name starts with _"
      },
      "columns": [
          {
              "type": "string",
              "label": "name",
              "query": "name"
          },
          {
              "type": "string",
              "label": "email",
              "query": "email"
          },
          {
              "type": "boolean",
              "label": "active",
              "query": "status.active"
          },
          {
              "type": "numeric",
              "label": "numberOfCommits",
              "query": "count commits"
          },
          {
              "type": "numeric",
              "label": "numberOfCommitsDuringLastYear",
              "query": "count commits during last year"
          },
          {
              "type": "date",
              "label": "firstCommitDate",
              "query": "date of first commit",
              "sort": "descending"
          },
          {
              "type": "date",
              "label": "lastCommitDate",
              "query": "date of last commit"
          }
      ],
      "pageSize": 10,
      "notes": "This table is used as an Author export for integration with other tools, so it's too generic to be useful in most other contexts.",
      "section": "export"
  }
]