[
    {
        "name": "OVR: Source code by creation year",
        "filter": "technology.code",
        "domain": "creationYear",
        "perspective": {
            "query": "changes",
            "numberOfGroups": 2,
            "thresholds": [
                3
            ]
        },
        "notes": "When were most of the files created? Are there many new files created every year?"
    },
    {
        "name": "OVR: Source code by creation year - recent activity",
        "highlight": "has changes during last year",
        "filter": "technology.code",
        "domain": "creationYear",
        "perspective": {
            "query": "changes",
            "numberOfGroups": 2,
            "thresholds": [
                3
            ]
        },
        "notes": "How many files were touched in the last year? Was activity focused on some components or scattered across the codebase? How old are the changed files?"
    },
    {
        "name": "ENC: Duplicate code",
        "highlight": "anomaly.*Dup*",
        "filter": "technology.code",
        "domain": "creationYear",
        "perspective": {
            "query": "changes",
            "numberOfGroups": 3,
            "thresholds": [
                3,
                10
            ]
        },
        "notes": "How many files with duplicate code are there? Are there also many new files?"
    },
    {
        "name": "SoC: Complex Files",
        "highlight": "strength of metric.atc >= 10 and changes >= 3",
        "domain": "status",
        "perspective": {
            "query": "changes",
            "numberOfGroups": 3,
            "thresholds": [
                3,
                10
            ]
        },
        "notes": "What are the most complex files in the codebase? Add other useful information in the table. For example, the following Metrics:\nstrength of metric.atc\nsum churn of changes during last year\nsum growth of changes during last year\nstrength of anomaly.testing.BugMagnet\nstrength of anomaly.testing.CriticalWeakCoverage\nstrength of anomaly.cohesion.tangling.PivotFile\nstrength of anomaly.cohesion.tangling.TasksBottleneck\nstrength of anomaly.cohesion.coordination.Bazaar\nstrength of anomaly.knowledge.lost.WeakOwnership\n\n"
    },
    {
        "name": "TST: Files by Role",
        "filter": "technology.code",
        "domain": "role",
        "perspective": {
            "query": "changes",
            "numberOfGroups": 3,
            "thresholds": [
                3,
                10
            ]
        },
        "notes": "Is the test code proportional to the production code?"
    },
    {
        "name": "TST: Test Coverage ",
        "highlight": "strength of metric.testReferences > 0",
        "filter": "technology.code and role.production",
        "domain": "component",
        "perspective": {
            "query": "strength of metric.testReferences",
            "numberOfGroups": 3,
            "thresholds": [
                1,
                3
            ]
        }
    },
    {
        "name": "Example: Anomaly by Technology",
        "highlight": "anomaly.*Task*",
        "domain": "technology",
        "perspective": {
            "query": "changes",
            "numberOfGroups": 1,
            "thresholds": []
        },
        "notes": "What types of files cause a certain anomaly (e.g. TasksBottleneck, Bazaar, Wide Commits)? "
    }
]