[
  {
    "type": "orderedQueriesClassifier",
    "entity": "file",
    "domain": "age",
    "groups": [
      {
        "label": "new",
        "query": "has first change during last year"
      },
      {
        "label": "old",
        "type": "default"
      }
    ]
  },
  {
    "type": "numericClassifier",
    "entity": "file",
    "domain": "status",
    "query": "count changes during last 6 months",
    "thresholds": [
      1
    ],
    "groups": [
      {
        "name": "standstill",
        "color": "#59abf4"
      },
      {
        "name": "active",
        "color": "#a5e463"
      }
    ]
  },
  {
    "type": "numericClassifier",
    "entity": "author",
    "domain": "status",
    "query": "count changes during last 6 months",
    "thresholds": [
      1
    ],
    "groups": [
      {
        "name": "standstill",
        "color": "#59abf4"
      },
      {
        "name": "active",
        "color": "#a5e463"
      }
    ]
  },
  {
    "type": "orderedQueriesClassifier",
    "entity": "file",
    "domain": "creationYear",
    "colorScheme": "6-years",
    "groups": [
      {
        "label": "<=2019",
        "query": "first change before 2020"
      },
      {
        "label": "2020",
        "query": "first change during 2020"
      },
      {
        "label": "2021",
        "query": "first change during 2021"
      },
      {
        "label": "2022",
        "query": "first change during 2022"
      },
      {
        "label": "2023",
        "query": "first change during 2023"
      },
      {
        "label": "2024",
        "query": "first change during 2024"
      }
    ]
  },
  {
    "type": "orderedQueriesClassifier",
    "entity": "change",
    "domain": "pattern",
    "groups": [
      {
        "label": "muddy",
        "query": "added >= 10 and deleted >= 10 and churn >= 40"
      },
      {
        "label": "pure-add",
        "query": "added >= 20 and deleted = 0"
      },
      {
        "label": "pure-delete",
        "query": "deleted >= 20 and added = 0"
      },
      {
        "label": "mainly-add",
        "query": "added >= 30 and deleted < 10"
      },
      {
        "label": "mainly-delete",
        "query": "deleted >= 30 and added < 10"
      },
      {
        "label": "tweak",
        "query": "(growth between -20 and 20) or (churn < 40)"
      }
    ]
  },
  {
    "type": "orderedQueriesClassifier",
    "entity": "file",
    "domain": "latestChangeYear",
    "colorScheme": "6-years",
    "groups": [
      {
        "label": "<=2019",
        "query": "last change before 2020"
      },
      {
        "label": "2020",
        "query": "last change before 2021"
      },
      {
        "label": "2021",
        "query": "last change before 2022"
      },
      {
        "label": "2022",
        "query": "last change before 2023"
      },
      {
        "label": "2023",
        "query": "last change before 2024"
      },
      {
        "label": "2024",
        "query": "last change before 2025"
      }
    ]
  },
  {
    "type": "orderedQueriesClassifier",
    "entity": "change",
    "domain": "fileCreationYear",
    "colorScheme": "6-years",
    "groups": [
      {
        "label": "<=2019",
        "query": "files having first change before 2020"
      },
      {
        "label": "2020",
        "query": "files having first change during 2020"
      },
      {
        "label": "2021",
        "query": "files having first change during 2021"
      },
      {
        "label": "2022",
        "query": "files having first change during 2022"
      },
      {
        "label": "2023",
        "query": "files having first change during 2023"
      },
      {
        "label": "2024",
        "query": "files having first change during 2024"
      }
    ]
  },
  {
    "type": "orderedQueriesClassifier",
    "entity": "file",
    "domain": "technology",
    "groups": [
      {
        "label": "code",
        "query": "extension in -i {c, h, cc, hh, cpp, hpp, cs,java,dart,sql,cql,kt,groovy,erl,hrl,js,angular,jsx,ts,tsx,jsp, py, php, pl, cmd, sh, bat, ps1, vbs, feature, story, Feature, steps, vb, fs, aspx, cshtml, kt, rb, erb, swift,vue, go, scala}"
      },
      {
        "label": "web",
        "query": "extension in -i {less, css, xsl, scss, xss, xsd, html, xhtml, wsdl, xjb, disco, ftl}"
      },
      {
        "label": "data",
        "query": "extension in -i {csv} or extension is json"
      },
      {
        "label": "resources",
        "query": "path like */resources/*"
      },
      {
        "label": "configuration",
        "query": "extension like insensitive *config or name like *gradle* or name is Jenkinsfile or name is pom.xml or extension like insensitive *settings or extension in {gradle, sbt, key, scr, pem, cer,pfx, ini,conf,cfg,project,header,targets,ruleset,yml,yaml,properties,prefs,props,Properties, avsc}"
      },
      {
        "label": "other",
        "type": "default"
      }
    ]
  },
  {
    "type": "orderedQueriesClassifier",
    "entity": "file",
    "domain": "technology.code",
    "groups": [
      {
        "label": "backend",
        "query": "extension in -i {cs,fs,vb,java,dart,sql,cql,kt,groovy,erl,hrl,swift,rb,go,scala}"
      },
      {
        "label": "frontend",
        "query": "extension in {js,angular,jsx,ts,tsx,vue,jsp,aspx,cshtml,erb}"
      },
      {
        "label": "scripting",
        "query": "extension in {py, pl, cmd, sh, bat, ps1, vbs}"
      },
      {
        "label": "bdd",
        "query": "extension in {feature, story, Feature, steps}"
      },
      {
        "label": "other",
        "type": "default"
      }
    ]
  },
  {
    "type": "orderedQueriesClassifier",
    "entity": "file",
    "domain": "role",
    "groups": [
      {
        "label": "production",
        "query": "not (path like insensitive *.spec.ts or path like insensitive *.spec.js or path like insensitive *test/* or path like insensitive *tests/* or name like insensitive test* or name contains {Test, TEST, _test} or name ends with -i .test.ts or name ends with -i .test.js or name ends with -i .test.tsx or path contains /src/it/ or path contains __tests__ or path contains -i {mocks, /mock})"
      },
      {
        "label": "test",
        "query": "(path like insensitive *.spec.ts or path like insensitive *.spec.js or path like insensitive *test/* or path like insensitive *tests/* or name like insensitive test* or name contains {Test, TEST, _test} or name ends with -i .test.ts or name ends with -i .test.js or name ends with -i .test.tsx or path contains /src/it/ or path contains __tests__) and (path contains not -i {mocks, /mock})"
      },
      {
        "label": "mock",
        "query": "path contains -i {mocks, /mock}"
      }
    ]
  },
  {
    "type": "orderedQueriesClassifier",
    "entity": "file",
    "domain": "language",
    "groups": [
      {
        "label": "java",
        "query": "has extension is java"
      },
      {
        "label": "kotlin",
        "query": "has extension is kt"
      },
      {
        "label": "swift",
        "query": "has filetype.swift*"
      },
      {
        "label": "python",
        "query": "has filetype.python*"
      },
      {
        "label": "go",
        "query": "has filetype.go*"
      },
      {
        "label": "scala",
        "query": "has filetype.scala*"
      },
      {
        "label": "sql",
        "query": "has extension contains -i sql"
      },
      {
        "label": "jsp",
        "query": "has filetype.jsp*"
      },
      {
        "label": "perl",
        "query": "has filetype.perl*"
      },
      {
        "label": "javascript",
        "query": "has filetype.javascript*"
      },
      {
        "label": "typescript",
        "query": "has filetype.typescript*"
      },
      {
        "label": "tsx",
        "query": "has filetype.extendscript*"
      },
      {
        "label": "vue",
        "query": "has filetype.vue*"
      },
      {
        "label": "csharp",
        "query": "has filetype.c#*"
      },
      {
        "label": "cpp",
        "query": "has filetype.c++*"
      },
      {
        "label": "visualbasic",
        "query": "has filetype.visualbasic*"
      },
      {
        "label": "cucumber",
        "query": "has filetype.cucumber*"
      },
      {
        "label": "aspnet_webforms",
        "query": "has filetype.aspnet_webforms*"
      },
      {
        "label": "aspnet_razor",
        "query": "has filetype.aspnet_razor*"
      },
      {
        "label": "sqlserver",
        "query": "has filetype.sqlserver*"
      },
      {
        "label": "html",
        "query": "has filetype.html*"
      },
      {
        "label": "stylesheets",
        "query": "has filetype.stylesheet*"
      },
      {
        "label": "scripts",
        "query": "has filetype.scripts*"
      },
      {
        "label": "yaml",
        "query": "has filetype.yaml*"
      },
      {
        "label": "terraform",
        "query": "has filetype.terraform*"
      },
      {
        "label": "json",
        "query": "has filetype.json*"
      },
      {
        "label": "php",
        "query": "has filetype.php*"
      },
      {
        "label": "markdown",
        "query": "extension is md"
      }
    ]
  },
  {
    "type": "orderedQueriesClassifier",
    "entity": "change",
    "domain": "language",
    "groups": [
      {
        "label": "java",
        "query": "files having extension is java"
      },
      {
        "label": "kotlin",
        "query": "files having extension is kt"
      },
      {
        "label": "swift",
        "query": "files having filetype.swift*"
      },
      {
        "label": "python",
        "query": "files having filetype.python*"
      },
      {
        "label": "php",
        "query": "files having filetype.php*"
      },
      {
        "label": "go",
        "query": "files having filetype.go*"
      },
      {
        "label": "scala",
        "query": "files having filetype.scala*"
      },
      {
        "label": "sql",
        "query": "files having extension contains -i sql"
      },
      {
        "label": "csharp",
        "query": "files having filetype.c#*"
      },
      {
        "label": "cpp",
        "query": "files having filetype.c++*"
      },
      {
        "label": "visualbasic",
        "query": "files having filetype.visualbasic*"
      },
      {
        "label": "cucumber",
        "query": "files having filetype.cucumber*"
      },
      {
        "label": "aspnet_webforms",
        "query": "files having filetype.aspnet_webforms*"
      },
      {
        "label": "aspnet_razor",
        "query": "files having filetype.aspnet_razor*"
      },
      {
        "label": "scripts",
        "query": "files having filetype.scripts*"
      },
      {
        "label": "yaml",
        "query": "files having filetype.yaml*"
      },
      {
        "label": "terraform",
        "query": "files having filetype.terraform*"
      },
      {
        "label": "json",
        "query": "files having filetype.json*"
      },
      {
        "label": "javascript",
        "query": "files having filetype.javascript*"
      },
      {
        "label": "typescript",
        "query": "files having filetype.typescript*"
      },
      {
        "label": "tsx",
        "query": "files having filetype.extendscript*"
      },
      {
        "label": "vue",
        "query": "files having filetype.vue*"
      },
      {
        "label": "markdown",
        "query": "files having extension is md"
      }
    ]
  },
  {
    "type": "orderedQueriesClassifier",
    "entity": "change",
    "domain": "filesize",
    "groups": [
      {
        "label": "S",
        "query": "files having size < 100"
      },
      {
        "label": "M",
        "query": "files having size < 250"
      },
      {
        "label": "L",
        "query": "files having size < 500"
      },
      {
        "label": "XL",
        "query": "files having size < 1000"
      },
      {
        "label": "XXL",
        "query": "files having size >= 1000"
      }
    ]
  },
  {
    "type": "orderedQueriesClassifier",
    "entity": "file",
    "domain": "filesize",
    "groups": [
      {
        "label": "S",
        "query": "size < 100"
      },
      {
        "label": "M",
        "query": "size < 250"
      },
      {
        "label": "L",
        "query": "size < 500"
      },
      {
        "label": "XL",
        "query": "size < 1000"
      },
      {
        "label": "XXL",
        "query": "size >= 1000"
      }
    ]
  },
  {
    "type": "orderedQueriesClassifier",
    "entity": "author",
    "domain": "tenure",
    "groups": [
      {
        "label": "newcomer",
        "query": "first change during last 3 months"
      },
      {
        "label": "established",
        "query": "first change during last 12 months"
      },
      {
        "label": "senior",
        "query": "first change during last 24 month"
      },
      {
        "label": "veteran",
        "type": "default"
      }
    ]
  },
  {
    "type": "orderedQueriesClassifier",
    "entity": "commit",
    "domain": "tenure",
    "groups": [
      {
        "label": "newcomer",
        "query": "author having tenure.newcomer"
      },
      {
        "label": "established",
        "query": "author having tenure.established"
      },
      {
        "label": "senior",
        "query": "author having tenure.senior"
      },
      {
        "label": "veteran",
        "query": "author having tenure.veteran"
      }
    ]
  },
  {
    "type": "orderedQueriesClassifier",
    "entity": "author",
    "domain": "startYear",
    "groups": [
      {
        "label": "<=2019",
        "query": "first change before 2020"
      },
      {
        "label": "2020",
        "query": "first change during 2020"
      },
      {
        "label": "2021",
        "query": "first change during 2021"
      },
      {
        "label": "2022",
        "query": "first change during 2022"
      },
      {
        "label": "2023",
        "query": "first change during 2023"
      },
      {
        "label": "2024",
        "query": "first change during 2024"
      }
    ]
  },
  {
    "type": "orderedQueriesClassifier",
    "entity": "commit",
    "domain": "year",
    "groups": [
      {
        "label": "<=2019",
        "query": "has date before 2020"
      },
      {
        "label": "2020",
        "query": "has date during 2020"
      },
      {
        "label": "2021",
        "query": "has date during 2021"
      },
      {
        "label": "2022",
        "query": "has date during 2022"
      },
      {
        "label": "2023",
        "query": "has date during 2023"
      },
      {
        "label": "2024",
        "query": "has date during 2024"
      }
    ]
  },
  {
    "type": "orderedQueriesClassifier",
    "entity": "change",
    "domain": "year",
    "groups": [
      {
        "label": "<=2019",
        "query": "has date before 2020"
      },
      {
        "label": "2020",
        "query": "has date during 2020"
      },
      {
        "label": "2021",
        "query": "has date during 2021"
      },
      {
        "label": "2022",
        "query": "has date during 2022"
      },
      {
        "label": "2023",
        "query": "has date during 2023"
      },
      {
        "label": "2024",
        "query": "has date during 2024"
      }
    ]
  },
  {
    "type": "orderedQueriesClassifier",
    "entity": "commit",
    "domain": "message.smartness",
    "groups": [
      {
        "label": "dumb",
        "query": "has taskprefix.@"
      },
      {
        "label": "smart",
        "type": "default"
      }
    ]
  },
  {
    "type": "orderedQueriesClassifier",
    "entity": "commit",
    "domain": "dev.involvement",
    "groups": [
      {
        "label": "veryweak",
        "query": "has author having commits < 10"
      },
      {
        "label": "weak",
        "query": "has author having commits < 20"
      },
      {
        "label": "average",
        "query": "has author having commits < 50"
      },
      {
        "label": "strong",
        "query": "has author having commits >= 50"
      }
    ]
  },
  {
    "type": "orderedQueriesClassifier",
    "entity": "commit",
    "domain": "message.nature",
    "groups": [
      {
        "label": "bugfix",
        "query": "message containing ins {korr, bugfix, hotfix, fix, bug, error, issue, fehler, korrektur, correct, korrigier, workaround, mistake, wrong, typo, broken, crash,fout,tekort,vergissing,probleem,verkeerd,botsing,krach,correctie,kapot,defect}"
      },
      {
        "label": "refactoring",
        "query": "message containing ins {aufräumen, aufgeräumt, sanitize, sanitise, refact, restructur, clean, cleanup, rename, rework, umbennant, formatierung, reorgani, reinig}"
      },
      {
        "label": "refinement",
        "query": "message containing ins {improve, update, remove, review, angepasst, aktualisiert, anpassung, entfernt, modifi, geändert, adapt, improved, adjust, performance, refin, hack, work-around}"
      },
      {
        "label": "other",
        "query": "message not containing ins {aufräumen, aufgeräumt, sanitize, sanitise, refact, restructur, clean, cleanup, rename, rework, umbennant, formatierung, reorgani, reinig, improve, update, remove, review, angepasst, aktualisiert, anpassung, entfernt, modifi, geändert, adapt, improved, adjust, performance, refin, hack, work-around, korr, bugfix, hotfix, fix, bug, error, issue, fehler, korrektur, correct, korrigier, workaround, crash, mistake, wrong, typo, broken, crash}"
      }
    ]
  },
  {
    "type": "numericClassifier",
    "entity": "commit",
    "domain": "message.size",
    "query": "count words of message",
    "thresholds": [
      1,
      3,
      6,
      10,
      20
    ],
    "groups": [
      "zero",
      "very-short",
      "short",
      "medium",
      "long",
      "very-long"
    ]
  },
  {
    "type": "numericClassifier",
    "entity": "commit",
    "domain": "volume.files",
    "query": "count files",
    "thresholds": [
      5,
      20,
      100
    ],
    "groups": [
      "focused",
      "medium",
      "bulk",
      "import"
    ]
  },
  {
    "type": "numericClassifier",
    "entity": "commit",
    "domain": "volume.churn",
    "query": "sum churn of changes",
    "thresholds": [
      250,
      1000
    ],
    "groups": [
      "focused",
      "medium",
      "bulk"
    ]
  },
  {
    "type": "numericClassifier",
    "entity": "change",
    "domain": "intent",
    "query": "growth",
    "thresholds": [
      -20,
      20,
      1000
    ],
    "groups": [
      "refactoring",
      "refinement",
      "development",
      "import"
    ]
  }
]
