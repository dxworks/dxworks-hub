[
  {
    "name": "Task prefixes used over time",
    "slug": "task-prefixes-used-over-time",
    "chartTypeOy1": "bar-chart",
    "ox": {
      "entity": "period",
      "label": ""
    },
    "oy1": {
      "query": "count commits",
      "label": "Commits (by task prefix)",
      "grouping": {
        "entity": "commit",
        "by": {
          "name": "taskprefix",
          "type": "classifier"
        }
      }
    },
    "notes": "How has the usage of task prefixes evolved? This can correlate to changes in project priorities (e.g if there is a task prefixes per product). This could also indicate a team with a high cognitive load that is spread too thin (e.g. working on many projects/task prefixes in parallel).",
    "orientation": "vertical",
    "section": "feature-traceability",
    "traits": [
      "aspect.code-evolution",
      "aspect.current-activity-hotspots",
      "aspect.traceable-changes",
      "aspect.cognitive-load"
    ]
  },
  {
    "name": "Task prefix (by repo)",
    "slug": "task-prefix-by-repo",
    "chartTypeOy1": "bar-chart",
    "ox": {
      "entity": "repo@commit",
      "label": ""
    },
    "oy1": {
      "query": "count commits",
      "label": "Commits (by task prefix)",
      "grouping": {
        "entity": "commit",
        "by": {
          "name": "taskprefix",
          "type": "classifier",
          "sort": "by value"
        }
      }
    },
    "notes": "What is the relation between repositories and task prefixes? Are task prefixes used across repositories?",
    "sort": {
      "by": "oy",
      "order": "descending"
    },
    "showAbsoluteValues": true,
    "orientation": "horizontal",
    "section": "feature-traceability",
    "traits": [
      "aspect.cognitive-load",
      "aspect.coordination-costs",
      "aspect.functional-cohesion",
      "architecture.microservices"
    ]
  },
  {
    "name": "Source-files (by role) per component",
    "slug": "source-files-by-role-per-component",
    "chartTypeOy1": "bar-chart",
    "ox": {
      "entity": "component@file",
      "label": "Component"
    },
    "oy1": {
      "query": "count files having technology.code",
      "label": "Source-files (by role)",
      "grouping": {
        "entity": "file",
        "by": {
          "name": "role",
          "type": "classifier",
          "sort": "by value"
        }
      }
    },
    "notes": "",
    "sort": {
      "by": "oy",
      "order": "descending"
    },
    "showAbsoluteValues": true,
    "orientation": "horizontal",
    "section": "quality-assurance",
    "traits": [
      "aspect.testing-coverage"
    ]
  },
  {
    "name": "Smart and literate commits per month",
    "slug": "smart-and-literate-commits-per-month",
    "chartTypeOy1": "bar-chart",
    "chartTypeOy2": "bar-chart",
    "ox": {
      "entity": "period",
      "label": ""
    },
    "oy1": {
      "query": "((count commits having message.smartness.smart) * 100) / (count commits)",
      "label": "% Smart commits",
      "valuesRange": {
        "minim": 0,
        "maxim": 100
      }
    },
    "oy2": {
      "query": "((count commits having (message.size.medium or message.size.*long)) * 100) / (count commits)",
      "label": "% Literate commits",
      "valuesRange": {
        "minim": 0,
        "maxim": 100
      }
    },
    "target": 90,
    "notes": "Is the team consistently using smart commits and literare commits?",
    "orientation": "vertical",
    "section": "feature-traceability",
    "traits": [
      "aspect.traceable-changes",
      "assessment.cqr",
      "cqr-perspective.overview"
    ]
  },
  {
    "name": "Recent changes (by file creation year) per month",
    "slug": "recent-changes-by-file-creation-year-per-month",
    "chartTypeOy1": "bar-chart",
    "ox": {
      "entity": "period",
      "label": "",
      "filter": "since last 12 months"
    },
    "oy1": {
      "query": "count changes",
      "label": "Recent changes (by file creation year)",
      "grouping": {
        "entity": "change",
        "by": {
          "name": "fileCreationYear",
          "type": "classifier",
          "sort": "alphabetical"
        },
        "colorScheme": "5-years"
      }
    },
    "notes": "This view helps you see if over the last year the files that were under active development represent new code, or changes to old files. This in turn helps you understand what type of development activity is happening.",
    "orientation": "vertical",
    "section": "overview",
    "traits": [
      "aspect.code-evolution",
      "aspect.freshness"
    ]
  },
  {
    "name": "New authors joining the team",
    "slug": "new-authors-joining-the-team",
    "chartTypeOy1": "bar-chart",
    "chartTypeOy2": "bar-chart",
    "ox": {
      "entity": "period",
      "label": ""
    },
    "oy1": {
      "query": "count authors having first commit during period",
      "label": "New authors"
    },
    "oy2": {
      "query": "count authors for commits",
      "label": "All authors"
    },
    "notes": "What's the ratio of new authors to existing authors? Is there a constant flux of new developers? Was there a complete team swap?",
    "showAbsoluteValues": true,
    "orientation": "vertical",
    "section": "knowledge",
    "traits": [
      "aspect.knowledge-continuity",
      "aspect.team-evolution"
    ]
  },
  {
    "name": "Commits (by repository) and authors per month",
    "slug": "commits-by-repository-and-authors-per-month",
    "chartTypeOy1": "bar-chart",
    "chartTypeOy2": "line-chart",
    "ox": {
      "entity": "period",
      "label": ""
    },
    "oy1": {
      "query": "count commits",
      "label": "Commits (by repository)",
      "grouping": {
        "entity": "commit",
        "by": {
          "name": "repo",
          "type": "classifier",
          "sort": "by value"
        }
      }
    },
    "oy2": {
      "query": "count authors for commits",
      "label": "Authors"
    },
    "notes": "Is there any correlation between the number of authors and the number of commits (or churn) over the codebase's history?",
    "orientation": "vertical",
    "section": "knowledge",
    "traits": [
      "aspect.team-evolution",
      "aspect.code-evolution"
    ]
  },
  {
    "name": "Knowledge continuity",
    "slug": "knowledge-continuity",
    "chartTypeOy1": "bar-chart",
    "ox": {
      "entity": "period",
      "label": ""
    },
    "oy1": {
      "query": "count commits",
      "label": "Commits (by author's tenure)",
      "grouping": {
        "entity": "commit",
        "by": {
          "name": "tenure",
          "type": "classifier",
          "sort": "by definition"
        }
      }
    },
    "notes": "The view helps to spot (at least) the following patterns: (1) periods with spikes in the number of active developers; (2) the balance between devs who worked longer on the project (veteran, senior) versus those who started working more recently (established, newcomer). Regarding the second point, check if in the latest months there is a trend of newer devs dominating the activity, while more experience devs slowing down. Note that the activity status is dynamic: in their first months of activity developers developers are 'newcomers', and over time they switch their status. Therefore, in the first months of the project all developers working on the project are 'newcomers'. Also check to see if (1) is there constant on-boarding of new developers? (2) has the team completely changed over its history? (3) is there a significant drop in the number of commits made by experienced authors?",
    "orientation": "vertical",
    "section": "knowledge",
    "traits": [
      "aspect.knowledge-continuity"
    ]
  },
  {
    "name": "Files Changed (by technology) and churn per author",
    "slug": "files-changed-by-technology-and-churn-per-author",
    "chartTypeOy1": "bar-chart",
    "chartTypeOy2": "bar-chart",
    "ox": {
      "entity": "author",
      "label": "",
      "filter": "changes during last 2 years"
    },
    "oy1": {
      "query": "sum size of files for changes during last 2 years",
      "label": "Size of files changed in the past 2 years (by technology)",
      "grouping": {
        "entity": "change",
        "by": {
          "name": "language",
          "type": "classifier",
          "sort": "by value"
        }
      }
    },
    "oy2": {
      "query": "sum churn of changes during last 2 years",
      "label": "Volume of change in the past 2 years"
    },
    "notes": "This view aims at estimating the cognitive load of authors: How much code do they need understand in order to make a change?",
    "sort": {
      "by": "oy",
      "order": "descending"
    },
    "orientation": "vertical",
    "section": "knowledge",
    "traits": [
      "aspect.cognitive-load"
    ]
  },
  {
    "name": "High impact tasks (by component)",
    "slug": "high-impact-tasks-by-component",
    "chartTypeOy1": "bar-chart",
    "ox": {
      "entity": "task",
      "label": "Task",
      "filter": "count files for commits >= 20 and commits >= 3"
    },
    "oy1": {
      "query": "count files for commits",
      "label": "Files (by component)",
      "grouping": {
        "entity": "file",
        "by": {
          "name": "component",
          "type": "classifier"
        }
      }
    },
    "notes": "Analyse the impact of scattered tasks. Do they affect multiple components (in which case they could increase the team's cognitive load)? Does implementing tasks require changes to components owned by different teams (in which case they would require high coordination costs?",
    "sort": {
      "by": "oy",
      "order": "descending"
    },
    "showAbsoluteValues": true,
    "orientation": "vertical",
    "section": "feature-encapsulation",
    "traits": [
      "aspect.cognitive-load",
      "aspect.coordination-costs",
      "aspect.locality-of-changes"
    ]
  },
  {
    "name": "Growth (by repo) and overall size per period",
    "slug": "growth-by-repo-and-overall-size-per-period",
    "chartTypeOy1": "bar-chart",
    "chartTypeOy2": "line-chart",
    "ox": {
      "entity": "period",
      "label": ""
    },
    "oy1": {
      "query": "sum growth of commits having growth > 0",
      "label": "Growth in period (by repository) ",
      "grouping": {
        "entity": "commit",
        "by": {
          "name": "repo",
          "type": "classifier"
        }
      }
    },
    "oy2": {
      "query": "sum size of files",
      "label": "Overall size (in LOC)"
    },
    "notes": "You can spot: (1) how old the codebase is; (2) the oldest and newest repos; (3) the repos with the highest recent growth, and repos that are inactive; (4) months with abrupt growth; (5) periods of standstill. Based on the duration of the project and the growth patterns you can get a solid indication on the project's current development phase: has the project started recently? or is it in vibrant growth? or in consolidation phase? or in maintenance? or close to standstill?",
    "orientation": "vertical",
    "section": "overview",
    "traits": [
      "assessment.cqr",
      "aspect.code-evolution",
      "aspect.current-activity-hotspots",
      "aspect.freshness",
      "cqr-perspective.overview"
    ]
  },
  {
    "name": "Filetypes (by component)",
    "slug": "filetypes-by-component",
    "chartTypeOy1": "bar-chart",
    "ox": {
      "entity": "filetype",
      "label": "File type (by component)"
    },
    "oy1": {
      "query": "count files",
      "label": "Files",
      "grouping": {
        "entity": "file",
        "by": {
          "name": "component",
          "type": "classifier",
          "sort": "by value"
        }
      }
    },
    "notes": "Understand in what component each technology is used.",
    "sort": {
      "by": "oy",
      "order": "descending"
    },
    "showAbsoluteValues": true,
    "orientation": "horizontal",
    "section": "overview",
    "traits": [
      "assessment.cqr",
      "aspect.technology-stack",
      "cqr-perspective.structuring",
      "aspect.technology-coherence",
      "aspect.technology-freshness"
    ]
  },
  {
    "name": "Filetypes (by file creation year)",
    "slug": "filetypes-by-file-creation-year",
    "chartTypeOy1": "bar-chart",
    "ox": {
      "entity": "filetype",
      "label": "File type (by file creation year)"
    },
    "oy1": {
      "query": "count files",
      "label": "Files",
      "grouping": {
        "entity": "file",
        "by": {
          "name": "creationYear",
          "type": "classifier",
          "sort": "alphabetical"
        },
        "colorScheme": "5-years"
      }
    },
    "notes": "Understand the main technologies used in the project. The file creation year can help you understand the phase of development. We also recommend grouping by latestChangeYear, to understand the change patterns.",
    "sort": {
      "by": "oy",
      "order": "descending"
    },
    "showAbsoluteValues": true,
    "orientation": "horizontal",
    "section": "overview",
    "traits": [
      "assessment.cqr",
      "aspect.technology-stack",
      "cqr-perspective.structuring",
      "report.include",
      "aspect.freshness",
      "aspect.code-evolution",
      "aspect.technology-coherence",
      "aspect.technology-freshness"
    ]
  },
  {
    "name": "Files (by component) and commits per task prefix",
    "slug": "files-by-component-and-commits-per-task-prefix",
    "chartTypeOy1": "bar-chart",
    "chartTypeOy2": "bar-chart",
    "ox": {
      "entity": "taskprefix",
      "label": "Task prefix",
      "filter": ""
    },
    "oy1": {
      "query": "count files for commits having not taskprefix.@",
      "label": "Files (w. task references in commits)",
      "grouping": {
        "entity": "file",
        "by": {
          "name": "repo",
          "type": "classifier"
        }
      }
    },
    "oy2": {
      "query": "count commits having not taskprefix.@",
      "label": "Commits (w. task references)"
    },
    "notes": "Get an overview of task prefixes and their usage across the various repositories",
    "sort": {
      "by": "oy",
      "order": "descending"
    },
    "showAbsoluteValues": true,
    "orientation": "vertical",
    "section": "feature-traceability",
    "traits": [
      "aspect.traceable-changes",
      "aspect.functional-cohesion"
    ]
  },
  {
    "name": "Dormant code (by component)",
    "slug": "dormant-code-by-component",
    "chartTypeOy1": "bar-chart",
    "chartTypeOy2": "bar-chart",
    "ox": {
      "entity": "component@file",
      "label": ""
    },
    "oy1": {
      "query": "count files having technology.code",
      "label": "Source-files (by year of last change)",
      "grouping": {
        "entity": "file",
        "by": {
          "name": "latestChangeYear",
          "type": "classifier",
          "sort": "alphabetical"
        },
        "colorScheme": "5-years"
      }
    },
    "oy2": {
      "query": "((files having (not changes during last 2 years and technology.code)) * 100) / (count files having technology.code)",
      "label": "% Files unchanged for at least 2 years"
    },
    "notes": "What are the components with the highest percentage of dormant code? Components that are completely dormant are less of an issue, since the data shows that there is a low probability of needing to change them. Notice components where a high percentage of code is dormant (e.g., over 95%), since changing them could be risky.",
    "sort": {
      "by": "oy",
      "order": "descending"
    },
    "showAbsoluteValues": true,
    "orientation": "vertical",
    "section": "overview",
    "traits": [
      "assessment.cqr",
      "aspect.freshness",
      "cqr-perspective.structuring"
    ]
  },
  {
    "name": "Distribution of commits per work hours",
    "slug": "distribution-of-commits-per-work-hours",
    "chartTypeOy1": "bar-chart",
    "ox": {
      "entity": "period",
      "label": ""
    },
    "oy1": {
      "query": "count commits",
      "label": "Commits (by day part)",
      "grouping": {
        "entity": "commit",
        "by": {
          "name": "daytime",
          "type": "classifier"
        },
        "colorScheme": "dayparts"
      }
    },
    "notes": "Is there a significant number of commits outside of working hours? What's the pattern (e.g., constant, every X months, sporadic)? Does it correlate with any important events (e.g. big release, started working from home because of Covid)?",
    "orientation": "vertical",
    "section": "quality-assurance",
    "traits": [
      "aspect.clean-code",
      "aspect.team-evolution"
    ]
  },
  {
    "name": "Distribution of commits per week",
    "slug": "distribution-of-commits-per-week",
    "chartTypeOy1": "bar-chart",
    "ox": {
      "entity": "period",
      "label": ""
    },
    "oy1": {
      "query": "count commits",
      "label": "Commits (by day of week)",
      "grouping": {
        "entity": "commit",
        "by": {
          "name": "weekday",
          "type": "classifier"
        },
        "colorScheme": "weekdays"
      }
    },
    "notes": "Is the team frequently commiting during weekends? Is the team frequently commiting more at the end of the sprint (e.g. on a Friday) - this could lead to a drop in code quality.",
    "orientation": "vertical",
    "section": "quality-assurance",
    "traits": [
      "aspect.clean-code",
      "aspect.team-evolution"
    ]
  },
  {
    "name": "Components (by main geozone)",
    "slug": "components-by-main-geozone",
    "chartTypeOy1": "bar-chart",
    "ox": {
      "entity": "component@file",
      "label": ""
    },
    "oy1": {
      "query": "count files",
      "label": "Files (by main geozone)",
      "grouping": {
        "entity": "file",
        "by": {
          "name": "main-geozone",
          "type": "classifier"
        }
      }
    },
    "notes": "Is a component developed in two Geozones? This can be problematic, as syncing across timezones is more difficult and the preffered approach is for a team to fully own a component.",
    "sort": {
      "by": "oy",
      "order": "descending"
    },
    "showAbsoluteValues": true,
    "orientation": "horizontal",
    "section": "knowledge",
    "traits": [
      "aspect.cognitive-load",
      "aspect.knowledge-continuity",
      "aspect.coordination-costs"
    ]
  },
  {
    "name": "Complex files - fraction of activity volume by currently active authors",
    "chartTypeOy1": "bar-chart",
    "ox": {
      "entity": "file",
      "label": "",
      "filter": "sum strength of metric.atc >= 10 and changes >= 3"
    },
    "oy1": {
      "query": "((sum churn of changes for authors having status.active) * 100) / (sum churn of changes)",
      "label": "% Activity volume by currently active authors",
      "valuesRange": {
        "minim": 0,
        "maxim": 100
      }
    },
    "target": 25,
    "notes": "Does the current team have enough experience on the most complex files?",
    "sort": {
      "by": "oy",
      "order": "descending"
    },
    "labels": {
      "maxLength": 25,
      "trimFrom": "end",
      "orientationAngle": 90
    },
    "orientation": "horizontal",
    "section": "separation-of-concerns",
    "traits": [
      "aspect.knowledge-availability",
      "aspect.responsibility-balance"
    ]
  },
  {
    "name": "Commits (by task prefix) per author",
    "slug": "commits-by-task-prefix-per-author",
    "chartTypeOy1": "bar-chart",
    "ox": {
      "entity": "author",
      "label": ""
    },
    "oy1": {
      "query": "count commits",
      "label": "Commits (by task prefix)",
      "grouping": {
        "entity": "commit",
        "by": {
          "name": "taskprefix",
          "type": "classifier"
        }
      }
    },
    "notes": "How are task prefixes assigned to authors/teams? ",
    "sort": {
      "by": "oy",
      "order": "descending"
    },
    "orientation": "vertical",
    "section": "knowledge",
    "traits": [
      "architecture.microservices",
      "aspect.cognitive-load",
      "aspect.knowledge-sharing",
      "aspect.knowledge-availability",
      "aspect.traceable-changes"
    ]
  },
  {
    "name": "Commits (by repository) per author",
    "slug": "commits-by-repository-per-author",
    "chartTypeOy1": "bar-chart",
    "ox": {
      "entity": "author",
      "label": "Authors (active authors are highlighted)",
      "highlight": "status.active"
    },
    "oy1": {
      "query": "count commits",
      "label": "Commits (by repository)",
      "grouping": {
        "entity": "commit",
        "by": {
          "name": "repo",
          "type": "classifier"
        }
      }
    },
    "notes": "Do authors work across repositories? Are there any repositories with polarised ownership? Are the most prolific authors still active?",
    "sort": {
      "by": "oy",
      "order": "descending"
    },
    "orientation": "vertical",
    "section": "knowledge",
    "traits": [
      "aspect.knowledge-sharing",
      "aspect.knowledge-availability",
      "assessment.cqr",
      "cqr-perspective.overview",
      "aspect.cognitive-load"
    ]
  },
  {
    "name": "Commits (by repo) per period",
    "slug": "commits-by-repo-per-period",
    "chartTypeOy1": "bar-chart",
    "ox": {
      "entity": "period",
      "label": ""
    },
    "oy1": {
      "query": "count commits",
      "label": "Commits (by repository)",
      "grouping": {
        "entity": "commit",
        "by": {
          "name": "repo",
          "type": "classifier"
        }
      }
    },
    "notes": "This shows the activity timeline using commits. Used together with Growth and Churn charts, to understand the codebase's history.",
    "orientation": "vertical",
    "section": "overview",
    "traits": [
      "assessment.cqr",
      "aspect.code-evolution",
      "aspect.current-activity-hotspots"
    ]
  },
  {
    "name": "Commits (by geozone)",
    "chartTypeOy1": "bar-chart",
    "ox": {
      "entity": "period",
      "label": ""
    },
    "oy1": {
      "query": "count commits",
      "label": "Commits (by geozone)",
      "grouping": {
        "entity": "commit",
        "by": {
          "name": "geozone",
          "type": "classifier"
        }
      }
    },
    "notes": "This chart helps you understand where is the team based. Was there a switch from one geozone to another? Are commits from two geozones done at the same time?",
    "orientation": "vertical",
    "section": "knowledge",
    "traits": [
      "aspect.team-evolution",
      "aspect.knowledge-continuity"
    ]
  },
  {
    "name": "Changes (by technology) per author",
    "slug": "changes-by-technology-per-author",
    "chartTypeOy1": "bar-chart",
    "ox": {
      "entity": "author",
      "label": "Authors (active authors are highlighted)",
      "highlight": "status.active"
    },
    "oy1": {
      "query": "count changes",
      "label": "Changes (by technology)",
      "grouping": {
        "entity": "change",
        "by": {
          "name": "language",
          "type": "classifier"
        },
        "colorScheme": "tableau"
      }
    },
    "notes": "Are authors full-stack? Or is there a clear separation between backend/frontend/test/infrastructure/db? If authors work across technologies, is there a preferred tech per author or is it evenly spread? Also, if they do work across languages, investigate if this is a requirement (i.e. is there strong task or co-change coupling between files/components from different languages)?",
    "sort": {
      "by": "oy",
      "order": "descending"
    },
    "orientation": "vertical",
    "section": "knowledge",
    "traits": [
      "aspect.knowledge-availability",
      "aspect.author-skills",
      "assessment.cqr",
      "viewset.default"
    ]
  },
  {
    "name": "Changes (by component) per author",
    "slug": "changes-by-component-per-author",
    "chartTypeOy1": "bar-chart",
    "ox": {
      "entity": "author",
      "label": "Authors (active authors are highlighted)",
      "highlight": "status.active"
    },
    "oy1": {
      "query": "count changes",
      "label": "Changes (by component)",
      "grouping": {
        "entity": "change",
        "by": {
          "name": "component",
          "type": "classifier"
        }
      }
    },
    "notes": "Do authors work across components? Are there any components with polarised ownership? Are the most prolific authors still active?",
    "sort": {
      "by": "oy",
      "order": "descending"
    },
    "orientation": "vertical",
    "section": "knowledge",
    "traits": [
      "aspect.knowledge-sharing",
      "aspect.knowledge-availability",
      "assessment.cqr",
      "cqr-perspective.overview",
      "report.include"
    ]
  },
  {
    "name": "Changes (by component) and size",
    "slug": "changes-by-component-and-size",
    "chartTypeOy1": "bar-chart",
    "chartTypeOy2": "line-chart",
    "ox": {
      "entity": "period",
      "label": ""
    },
    "oy1": {
      "query": "sum churn of changes",
      "label": "Volume of change (grouped by component)",
      "grouping": {
        "entity": "change",
        "by": {
          "name": "component",
          "type": "classifier"
        }
      }
    },
    "oy2": {
      "query": "sum size of files",
      "label": "Lines of code"
    },
    "notes": "How has the codebase grown over time: (i) is there a low or a high growth rate? (ii) has the growth rate changed over the codebase's history (e.g. signaling a change from development to maintenance)? \nNOTE: Look for extremely high growth in a single period. This can signal an import event, which could be marked on the chart.",
    "orientation": "vertical",
    "section": "overview",
    "traits": [
      "assessment.cqr",
      "aspect.code-evolution",
      "aspect.current-activity-hotspots",
      "cqr-perspective.overview",
      "report.include"
    ]
  },
  {
    "name": "Changed test files over time",
    "slug": "changed-test-files-over-time",
    "chartTypeOy1": "bar-chart",
    "ox": {
      "entity": "period",
      "label": ""
    },
    "oy1": {
      "query": "count files having technology.code for changes",
      "label": "Source-files (by role)",
      "grouping": {
        "entity": "file",
        "by": {
          "name": "role",
          "type": "classifier"
        }
      }
    },
    "notes": "Is the number of changed test files proportional to changed production files? Are test files updated each month or in batches? This indicates if automated testing is part of daily development work or something done infrequently.",
    "orientation": "vertical",
    "section": "quality-assurance",
    "traits": [
      "aspect.testing-coverage"
    ]
  },
  {
    "name": "Bug-fix percentage and changes (by file role) by period",
    "slug": "bug-fix-percentage-and-changes-by-file-role-by-period",
    "chartTypeOy1": "bar-chart",
    "chartTypeOy2": "line-chart",
    "ox": {
      "entity": "period",
      "label": ""
    },
    "oy1": {
      "query": "count changes for files",
      "label": "Changes (by file role)",
      "grouping": {
        "entity": "file",
        "by": {
          "name": "role",
          "type": "classifier"
        }
      }
    },
    "oy2": {
      "query": "((count commits having message.nature.bugfix) * 100) / (count commits)",
      "label": "% Bug-Fix"
    },
    "notes": "How has the Bug-fix percentage evolved over time? Does this correlate with an increase/decrease in test code changes?",
    "orientation": "vertical",
    "section": "quality-assurance",
    "traits": [
      "aspect.testing-coverage",
      "aspect.testing-efficacy",
      "assessment.cqr",
      "cqr-perspective.overview",
      "report.include"
    ]
  },
  {
    "name": "Authors (by dev involvement in month) per month",
    "slug": "authors-by-dev-involvement-in-month-per-month",
    "chartTypeOy1": "bar-chart",
    "ox": {
      "entity": "period",
      "label": ""
    },
    "oy1": {
      "query": "count authors for commits",
      "label": "Authors (by commits during month)",
      "grouping": {
        "entity": "author",
        "by": {
          "name": "count commits during period",
          "type": "query"
        },
        "numberOfGroups": 4,
        "groupsLabels": [
          "1",
          "[1, 5)",
          "[5, 15)",
          ">= 15"
        ],
        "thresholds": [
          2,
          5,
          15
        ],
        "colorScheme": "authorinvolvement"
      }
    },
    "notes": "This view is useful when there are many authors with few montly commits. This low level of involvement raises the potential risk that it will take a long time for developers to become proficient on the codebase.",
    "showAbsoluteValues": true,
    "orientation": "vertical",
    "section": "knowledge",
    "traits": [
      "aspect.cohesive-changes",
      "aspect.cognitive-load"
    ]
  },
  {
    "name": "Anomalies by repository",
    "slug": "anomalies-by-repository",
    "chartTypeOy1": "bar-chart",
    "ox": {
      "entity": "anomaly",
      "label": "Anomaly"
    },
    "oy1": {
      "query": "count files",
      "label": "Files with anomalies (grouped by repository)",
      "grouping": {
        "entity": "file",
        "by": {
          "name": "repo",
          "type": "classifier"
        }
      }
    },
    "notes": "What are the most widespread anomalies? What repositories to they affect?",
    "sort": {
      "by": "oy",
      "order": "descending"
    },
    "labels": {
      "maxLength": 40,
      "trimFrom": "end",
      "orientationAngle": 90
    },
    "orientation": "horizontal",
    "section": "separation-of-concerns",
    "traits": [
      "aspect.clean-code",
      "aspect.responsibility-balance"
    ]
  },
  {
    "name": "Activity on main programming languages",
    "slug": "activity-on-main-programming-languages",
    "chartTypeOy1": "bar-chart",
    "chartTypeOy2": "bar-chart",
    "ox": {
      "entity": "language@file",
      "label": ""
    },
    "oy1": {
      "query": "count files having technology.code",
      "label": "Source-files (in red files changed last year)",
      "highlight": "changes during last year"
    },
    "oy2": {
      "query": "count files having (technology.code and first change during last year)",
      "label": "Source-files created last year"
    },
    "notes": "What are the filetypes that concentrate most of the recent changes? Is the ratio of recently changed files over all files consistent across technologies or is there a filetype that has been changed disproportionally (e.g. changes across most of the js files, perhaps signaling a major framework version upgrade)?",
    "sort": {
      "by": "oy",
      "order": "descending"
    },
    "showAbsoluteValues": true,
    "orientation": "vertical",
    "section": "overview",
    "traits": [
      "assessment.cqr",
      "aspect.technology-stack",
      "aspect.freshness"
    ]
  },
  {
    "name": "Files with weak ownership (by year of last change) per component",
    "slug": "files-with-weak-ownership-by-year-of-last-change-per-component",
    "chartTypeOy1": "bar-chart",
    "ox": {
      "entity": "component@file",
      "label": ""
    },
    "oy1": {
      "query": "count files having (technology.code and anomaly.*WeakOwner*)",
      "label": "Source-files with weak ownership (by year of last change)",
      "grouping": {
        "entity": "file",
        "by": {
          "name": "latestChangeYear",
          "type": "classifier",
          "sort": "by definition"
        },
        "colorScheme": "3-years"
      }
    },
    "notes": "Are there many recently changed files with Weak Ownership? This poses the risk that the team does not have enough knowledge of these files, which in turn may lead to slower and more error-prone changes",
    "sort": {
      "by": "oy",
      "order": "descending"
    },
    "showAbsoluteValues": true,
    "orientation": "vertical",
    "section": "knowledge",
    "traits": [
      "aspect.knowledge-availability"
    ]
  },
  {
    "name": "Files changed each month (by techonology)",
    "slug": "files-changed-each-month-by-techonology",
    "chartTypeOy1": "bar-chart",
    "ox": {
      "entity": "period",
      "label": ""
    },
    "oy1": {
      "query": "count files for commits",
      "label": "Files (by technology)",
      "grouping": {
        "entity": "file",
        "by": {
          "name": "technology",
          "type": "classifier"
        }
      }
    },
    "notes": "If the codebase uses many technologies, this view helps you spot any change in development patterns (e.g. from code to web). Use the principle of surprise (e.g. are there many configuration files updated each month?).",
    "orientation": "vertical",
    "section": "overview",
    "traits": [
      "aspect.code-evolution"
    ]
  },
  {
    "name": "Duplicate files (by changes made after initial development period)",
    "slug": "duplicate-files-by-changes-made-after-initial-development-period",
    "chartTypeOy1": "bar-chart",
    "ox": {
      "entity": "period",
      "label": ""
    },
    "oy1": {
      "query": "count files having (anomaly.*Dup* and first change during period)",
      "label": "New files with duplication (by changes made after initial development period)",
      "grouping": {
        "entity": "file",
        "by": {
          "name": "count changes having date after $first_activity_date plus three months",
          "type": "query"
        },
        "numberOfGroups": 4
      }
    },
    "notes": "This view can help you understand if duplication is systematic and if it's an ongoing practice. For example, are new duplicate files created every year? Do they evolve after they are initially developed?",
    "orientation": "vertical",
    "section": "feature-encapsulation",
    "traits": [
      "aspect.duplication"
    ]
  },
  {
    "name": "Concepts by component",
    "slug": "concepts-by-component",
    "chartTypeOy1": "bar-chart",
    "ox": {
      "entity": "concept",
      "label": "Concept"
    },
    "oy1": {
      "query": "count files",
      "label": "Files (by component)",
      "grouping": {
        "entity": "file",
        "by": {
          "name": "component",
          "type": "classifier"
        }
      }
    },
    "notes": "Are important concepts spread over many components?",
    "orientation": "horizontal",
    "section": "feature-encapsulation",
    "traits": [
      "aspect.locality-of-changes",
      "aspect.cognitive-load",
      "aspect.functional-cohesion"
    ]
  },
  {
    "name": "Commits (by author involvement) per month",
    "slug": "commits-by-author-involvement-per-month",
    "chartTypeOy1": "bar-chart",
    "ox": {
      "entity": "period",
      "label": ""
    },
    "oy1": {
      "query": "count commits",
      "label": "Commits (by author involvement)",
      "grouping": {
        "entity": "commit",
        "by": {
          "name": "dev.involvement",
          "type": "classifier",
          "sort": "by definition"
        },
        "colorScheme": "authorinvolvement"
      }
    },
    "notes": "Is there a large percentage of commits done by authors with a weak involvement (i.e. less than 20 commits) in the codebase (up to that point)?",
    "orientation": "vertical",
    "section": "knowledge",
    "traits": [
      "aspect.knowledge-continuity",
      "aspect.team-evolution"
    ]
  },
  {
    "name": "Churn (by volume type) per period",
    "slug": "churn-by-volume-type-per-period",
    "chartTypeOy1": "bar-chart",
    "ox": {
      "entity": "period",
      "label": ""
    },
    "oy1": {
      "query": "sum churn of commits",
      "label": "Volume of change (by commit size)",
      "grouping": {
        "entity": "commit",
        "by": {
          "name": "volume.churn",
          "type": "classifier"
        }
      }
    },
    "notes": "The view indicates the impact that bulk commits have on the overall volume of change per month. Remember that 'bulk commits' refers to those commits with a very large change-set or a very large volume of change. ",
    "orientation": "vertical",
    "section": "feature-traceability",
    "traits": [
      "aspect.cohesive-changes"
    ]
  },
  {
    "name": "Commits (by volume type) per period",
    "slug": "commits-by-volume-type-per-period",
    "chartTypeOy1": "bar-chart",
    "ox": {
      "entity": "period",
      "label": ""
    },
    "oy1": {
      "query": "count commits",
      "label": "Commits (by commit size)",
      "grouping": {
        "entity": "commit",
        "by": {
          "name": "volume.churn",
          "type": "classifier"
        }
      }
    },
    "notes": "The view indicates the number of commits, in order to see how many bulk commits are done monthly. Remember that 'bulk commits' refers to those commits with a very large change-set or a very large volume of change. ",
    "orientation": "vertical",
    "section": "feature-traceability",
    "traits": [
      "aspect.cohesive-changes"
    ]
  },
  {
    "name": "Authors (by involvement) per month",
    "slug": "authors-by-involvement-per-month",
    "chartTypeOy1": "bar-chart",
    "ox": {
      "entity": "period",
      "label": ""
    },
    "oy1": {
      "query": "count authors for commits",
      "label": "Authors",
      "grouping": {
        "entity": "author",
        "by": {
          "name": "count commits",
          "type": "query"
        },
        "numberOfGroups": 4
      }
    },
    "notes": "Are there \"satellite\" authors that make few overall changes? If there are many such authors, the conceptual integrity of the code base could suffer.",
    "orientation": "vertical",
    "section": "knowledge",
    "traits": [
      "aspect.knowledge-continuity"
    ]
  },
  {
    "name": "Volume of Activity per Active Developer",
    "slug": "volume-of-activity-per-active-developer",
    "chartTypeOy1": "line-chart",
    "chartTypeOy2": "line-chart",
    "ox": {
      "entity": "period",
      "label": ""
    },
    "oy1": {
      "query": "(sum churn of commits not having (volume.*.bulk or volume.*.import)) / (count authors for commits not having (volume.*.bulk or volume.*.import))",
      "label": "Churn / Dev (only non-bulk commits)"
    },
    "oy2": {
      "query": "(sum growth of commits not having (volume.*.bulk or volume.*.import)) / (count authors for commits not having (volume.*.bulk or volume.*.import))",
      "label": "Growth / Dev (only non-bulk commits)"
    },
    "notes": "Many times, the output per developer decreases as the time evolves (because of the increasing technical debt and architecture viscosity). Is this the case here? Were there any software modernisation efforts? Did they pay off (note: many times modernisation efforts make things worse before they get better, so be sure to look over a longer time horizon)",
    "orientation": "vertical",
    "section": "knowledge",
    "traits": [
      "aspect.cognitive-load",
      "aspect.team-evolution",
      "aspect.code-evolution"
    ]
  }
]
